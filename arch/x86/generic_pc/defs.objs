# defs.objs - build system

#
# Copyright (c) 2015 Wind River Systems, Inc.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1) Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# 2) Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# 3) Neither the name of Wind River Systems nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

bsp_INCLUDE_DIR = $(strip \
	${vBASE}/kernel/common/bsp \
	${vBASE}/include/bsp \
	${vBASE}/include \
	${vBASE}/drivers \
	${vBASE}/arch/${vARCH} \
	${vBSP_BASE_DIR}/${vBSP} \
)

bsp_kernel_SRC = $(strip \
	arch/${vARCH}/bsp/crt0.s \
	arch/${vARCH}/bsp/cache.c \
	arch/${vARCH}/bsp/cache_s.s \
	arch/${vARCH}/bsp/rand32.c \
	kernel/common/bsp/init.c \
	kernel/common/bsp/ctors.c \
	arch/${vARCH}/bsp/sysFatalErrorHandler.c \
)

bsp_drivers_SRC = $(strip \
	drivers/serial/ns16550.c \
	drivers/console/uart_console.c \
)

ifeq (${CONFIG_MICROKERNEL},y)
  bsp_kernel_SRC += $(strip \
  )
  bsp_drivers_SRC += $(strip \
  )
endif


# drivers section
# timer drivers
bsp_drivers_SRC_PIT_y = drivers/timer/i8253.c
bsp_drivers_SRC_LOAPIC_TIMER_y = arch/${vARCH}/timer/loApicTimer.c
bsp_drivers_SRC_HPET_y = arch/${vARCH}/timer/hpet.c

# Bluetooth drivers
bsp_drivers_SRC_BLUETOOTH_UART_y = drivers/bluetooth/uart.c

# interrupt controllers
# variable indicates PCI initialization
bsp_PIC_INIT = ${CONFIG_PIC}${CONFIG_SHUTOFF_PIC}

# variable indicates processing PIC interrupts
bsp_PIC_INTERRUPTS = ${CONFIG_PIC}

bsp_drivers_SRC_LOAPIC_y = arch/${vARCH}/interrupt_controller/loApicIntr.c
bsp_drivers_SRC_IOAPIC_y = arch/${vARCH}/interrupt_controller/ioApicIntr.c
bsp_drivers_SRC_PIC_y =    drivers/interrupt_controller/i8259.c
bsp_kernel_SRC_PICBOI_y = arch/${vARCH}/bsp/i8259Boi.s

bsp_kernel_SRC += $(strip \
	${bsp_kernel_SRC_PICBOI_${bsp_PIC_INTERRUPTS}} \
)

bsp_drivers_SRC += $(strip \
	${bsp_drivers_SRC_PIT_${CONFIG_PIT}} \
	${bsp_drivers_SRC_LOAPIC_TIMER_${CONFIG_LOAPIC_TIMER}} \
	${bsp_drivers_SRC_HPET_${CONFIG_HPET}} \
	${bsp_drivers_SRC_LOAPIC_${CONFIG_LOAPIC}} \
	${bsp_drivers_SRC_IOAPIC_${CONFIG_IOAPIC}} \
	${bsp_drivers_SRC_PIC_${bsp_PIC_INIT}} \
	${bsp_drivers_SRC_BLUETOOTH_UART_${CONFIG_BLUETOOTH_UART}} \
)

# BSP specific section

bsp_SRC_LOAPIC_y = arch/${vARCH}/bsp/systemApic.c

bsp_SRC_PIC_y = arch/${vARCH}/bsp/systemPic.c

bsp_platform_SRC = $(strip \
	${bsp_SRC_LOAPIC_${CONFIG_LOAPIC}} \
	${bsp_SRC_PIC_${CONFIG_PIC}} \
	arch/${vARCH}/bsp/driver_static_irq_stubs.s \
)

bsp_SRC = $(strip \
	${vBSP_BASE_DIR}/${vBSP}/system.c \
	$(addprefix ${vBASE}/,${bsp_kernel_SRC}) \
	$(addprefix ${vBASE}/,${bsp_drivers_SRC}) \
	$(addprefix ${vBASE}/,${bsp_platform_SRC}) \
)

KLIBS += bsp
