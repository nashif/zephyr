# Intel-core.kconf - fundamental Intel architecture configuration options

#
# Copyright (c) 2011-2014 Wind River Systems, Inc.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1) Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# 2) Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# 3) Neither the name of Wind River Systems nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

# Architecture-specific options
#	- defines options that are specific to BSPs based on this architecture
#	- provides defaults for many (but not all) options; BSP configuration
#	  files must specify default values for options that lack them and
#	  may override the defaults specified here if required


#
# CPU type options that are currently supported
# (BSP must choose one)
#

config	CPU_MINUTEIA
	bool
	# omit prompt to signify a "hidden" option
	default n
	help
	  This option signifies the use of a CPU from the Minute IA family.

config	CPU_PENTIUM4
	bool
	# omit prompt to signify a "hidden" option
	default n
	help
	  This option signifies the use of a CPU from the Pentium 4 family.


#
# options that are directly tied to a CPU type
# (BSP shouldn't need to override the default value of any of these)
#

config  ISA_IA32
	bool
	# omit prompt to signify a "hidden" option
	default y if CPU_MINUTEIA || CPU_PENTIUM4
	default n
	help
	  This option signifies the use of a CPU based on the Intel IA-32
	  instruction set architecture.

config	GLOBAL_PAGE_MAPPING
	bool
	# omit prompt to signify a "hidden" option
	default n if CPU_MINUTEIA
	default y
	help
	  This option enables the use of global page mapping, which is only
	  applicable to Intel CPUs that are Pentium II or later.

config	HARDWARE_BP_SUPPORTED
	bool
	# omit prompt to signify a "hidden" option
	default y if ISA_IA32
	default n
	help
	  This option signifies that the target supports hardware-based
	  instruction breakpoints and/or data watchpoints.

config  INVLPG_UNSUPPORTED
	bool
	# omit prompt to signify a "hidden" option
	default n
	help
	  This option signifies the use of an Intel CPU that lacks support
	  for the INVLPG instruction (i.e. any CPU that predates the i486).

config  CMOV_UNSUPPORTED
	bool
	# omit prompt to signify a "hidden" option
	default y if CPU_MINUTEIA
	default n
	help
	  This option signifies the use of an Intel CPU that lacks support
	  for the CMOV instruction.

config  CPU_FLOAT_UNSUPPORTED
	bool
	# omit prompt to signify a "hidden" option
	default y if CPU_MINUTEIA
	default n
	select CPU_SSE_UNSUPPORTED
	help
	  This option signifies the use of an Intel CPU that lacks support
	  for floating point operations.

config  CPU_SSE_UNSUPPORTED
	bool
	# omit prompt to signify a "hidden" option
	default n
	help
	  This option signifies the use of an Intel CPU that lacks support
	  for SSEx instructions (i.e. those which pre-date Pentium III).

config	CACHE_LINE_SIZE
	int
	# omit prompt to signify a "hidden" option
	default 64 if CPU_PENTIUM4
	default 0
	help
	  Size in bytes of a CPU cache line.

#
# options that indicate if a target board supports certain capabilities or not
# (BSP must select those that apply to it)
#

config	UNALIGNED_WRITE_UNSUPPORTED
	bool
	# omit prompt to signify a "hidden" option
	default n
	help
	  This option signifies that the target may not properly decode the
	  IA-32 processor's byte enable (BE) lines, resulting in the inability
	  to read/write unaligned quantities.

config  LOCK_INSTRUCTION_UNSUPPORTED
	bool
	# omit prompt to signify a "hidden" option
	default n
	help
	  This option signifies that the target lacks support for the IA-32
	  LOCK prefix instruction. Code running on such targets cannot
	  use the LOCK prefix to perform read-modify-write operations in an
	  atomic manner; such targets must utilize other techniques to perform
	  atomic operations (such as locking interrupts).

# CLFLUSH was introduced with PENTIUM4 processors, but might not be
# available. The default QEMU implementation used by VxMicro (-cpu qemu32) does
# not support it.

config	CPU_MIGHT_SUPPORT_CLFLUSH
	bool
	# omit prompt to signify a "hidden" option
	default n
	help
	  If a BSP uses a processor that possibly implements CLFLUSH, change
	  the default in that BSP's config file.

config  CLFLUSH_INSTRUCTION_SUPPORTED
	bool
	prompt "CLFLUSH instruction supported" if CPU_MIGHT_SUPPORT_CLFLUSH
	depends on CPU_MIGHT_SUPPORT_CLFLUSH
	default n
	help
	  Only enable this if the CLFLUSH instruction is supported, so that
	  an implementation of _SysCacheFlush() that uses CLFLUSH is made
	  available, instead of the one using WBINVD.

config  BOI_HANDLER_SUPPORTED
	bool
	# omit prompt to signify a "hidden" option
	default n
	help
	  This option signifies that the target has one or more devices whose
	  driver utilizes a "beginning of interrupt" handler that gets called
	  before VxMicro's standard interrupt handling code. This capability
	  can be used by the driver to suppress spurious interrupts generated
	  by the device (or for other purposes).

config  EOI_HANDLER_SUPPORTED
	bool
	# omit prompt to signify a "hidden" option
	default n
	help
	  This option signifies that the target has one or more devices whose
	  driver utilizes an "end of interrupt" handler that gets called
	  after VxMicro's standard interrupt handling code. This capability
	  can be used by the driver to tell the device that an interrupt
	  has been handled (or for other purposes).

config  IOAPIC
	bool
	# omit prompt to signify a "hidden" option
	default n
	help
	  This option signifies that the target has an IO-APIC device. This
	  capability allows IO-APIC-dependent code to be included.

config LOAPIC
	bool
	# omit prompt to signify a "hidden" option
	default n
	help
	  This option selects local APIC as the interrupt controller.

config PIC
	bool
	# omit prompt to signify a "hidden" option
	default n
	help
	  This option selects legacy i8259 as the interrupt controller.

config  SHUTOFF_PIC
	bool
	# omit prompt to signify a "hidden" option
	depends on !PIC
	default n
	help
	  This option disables all interrupts on the PIC

config HPET_TIMER
	bool
	# omit prompt to signify a "hidden" option
	default n
	help
	  This option selects High Precision Event Timer (HPET) as a
	  system timer.

config LOAPIC_TIMER
	bool
	# omit prompt to signify a "hidden" option
	depends on LOAPIC
	default n
	help
	  This option selects LOAPIC timer as a system timer.

config LOAPIC_TIMER_FREQ
	int
	# omit prompt to signify a "hidden" option
	depends on LOAPIC_TIMER
	default 0
	help
	  This option specifies LOAPIC timer frequency in HZ.

config PIT
	bool
	# omit prompt to signify a "hidden" option
	default n
	help
	  This option selects legacy i8253 timer as system timer.

config PCI
	bool
	# omit prompt to signify a "hidden" option
	default n
	help
	  This options enables support of PCI bus enumeration for device
	  drivers.

config	EXTRA_SERIAL_PORT
	bool
	# omit prompt to signify a "hidden" option
	default n
	help
	  This option signifies the number of serial ports the target has.

config  SERIAL_INTERRUPT_LEVEL
	bool
	# omit prompt to signify a "hidden" option
	depends on IOAPIC && EXTRA_SERIAL_PORT
	default y
	help
	  Option signifies that the serial controller uses level interrupts
	  instead of edge

config  SERIAL_INTERRUPT_LOW
	bool
	# omit prompt to signify a "hidden" option
	depends on IOAPIC && EXTRA_SERIAL_PORT
	default n
	help
	  Option signifies that the serial controller uses low level interrupts
	  instead of high

config	CUSTOM_RANDOM_GENERATOR
	bool
	# omit prompt to signify a "hidden" option
	default n
	help
	  This option signifies that the target uses custom random number
	  generator.


# options that indicate if a specific capability is supported or not
# (BSP must select those that apply to it)

config	DYNAMIC_INT_STUBS
	bool
	# omit prompt to signify a "hidden" option
	default n
	help
	  This option allows a BSP's drivers to install interrupt handlers
	  at run time, if desired. If not enabled, interrupt handlers can only
	  be installed statically when the VxMicro image is created.

config  PROT_MODE_SWITCH_PROMPT
	bool
	# omit prompt to signify a "hidden" option
	default n
	help
	  This option allows users to select the value of the PROT_MODE_SWITCH
	  configuration option.

config  ADVANCED_IDLE_SUPPORTED
	bool
	# omit prompt to signify a "hidden" option
	default n
	help
	  This option signifies that the target supports the ADVANCED_IDLE
	  configuration option.

#
# boot sequence features
#

menu "Boot Sequence Options"
	depends on PROT_MODE_SWITCH_PROMPT

config	PROT_MODE_SWITCH
	bool
	prompt "Switch to 32-bit protected mode when booting"
	default n
	help
	  This option causes the kernel to transition from real mode (16-bit)
	  to protected mode (32-bit) during its initial booting sequence.

endmenu

config	BOOT_A20_ENABLE
	bool
	# omit prompt to signify a "hidden" option
	depends on PROT_MODE_SWITCH
	default n
	help
	  This option causes the A20 line to be enabled during the transition
	  from real mode (16-bit) to protected mode (32-bit) during its initial
	  booting sequence.

#
# memory layout features
#

menu "Memory Layout Options"

config	IDT_NUM_VECTORS
	int
	prompt "Number of IDT vectors"
	default 256
	help
	  This option specifies the number of interrupt vector entries in the
	  Interrupt Descriptor Table (IDT). By default all 256 vectors are
	  supported in an IDT requiring 2048 bytes of memory.

config  NUM_GDT_SPARE_ENTRIES
	int
	prompt "Number of spare GDT entries"
	default 0
	help
	  This option specifies the number of spare entries in the Global
	  Descriptor Table (GDT).

config  PHYS_LOAD_ADDR
	hex
	# omit prompt to signify a "hidden" option
	# default value must be supplied by BSP
	help
	  This option specifies the physical address where the kernel is loaded.

endmenu

#
# floating point features
#

menu "Floating Point Options"
	depends on !CPU_FLOAT_UNSUPPORTED

config  FLOAT
	bool
	prompt "Floating point instructions"
	default n
	select FP_SHARING if ENHANCED_SECURITY
	help
	  This option enables the use of x87 FPU and MMX instructions by
	  a task or fiber.

	  Disabling this option means that any task or fiber that uses a
	  floating point instruction will get a fatal exception.

config  SSE
	bool
	prompt "SSEx instructions"
	depends on FLOAT && !CPU_SSE_UNSUPPORTED
	default n
	help
	  This option enables the use of SSEx instructions by a task or fiber.

	  Disabling this option means that no task or fiber may use SSEx
	  instructions; any such use will result in undefined behavior.

config  FP_SHARING
	bool
	prompt "Floating point resource sharing" if !ENHANCED_SECURITY
	depends on FLOAT
	default n
	select AUTOMATIC_FP_ENABLING if ENHANCED_SECURITY
	help
	  This option allows multiple tasks and fibers to safely utilize
	  floating point hardware resources. Every task or fiber that wishes
	  to use floating point instructions (i.e. x87 FPU, MMX, or SSEx) must
	  be created with such support already enabled, or must enable this
	  support via task_float_enable() or fiber_float_enable() before
	  executing these instructions.

	  Enabling this option adds 108 bytes to the stack size requirement
	  of each task or fiber that utilizes x87 FPU or MMX instructions,
	  and adds 464 bytes to the stack size requirement of each task or
	  fiber that utilizes SSEx instructions. (The stack size requirement
	  of tasks and fibers that do not utilize floating point instructions
	  remains unchanged.)

	  Disabling this option means that only a single task or fiber may
	  utilize x87 FPU, MMX, or SSEx instructions. (The stack size
	  requirement of all tasks and fibers remains unchanged.)

config  AUTOMATIC_FP_ENABLING
	bool
	prompt "Automatically enable floating point resource sharing" \
	       if !ENHANCED_SECURITY
	depends on FP_SHARING
	default n
	help
	  This option allows tasks and fibers to safely utilize floating
	  point hardware resources without requiring them to first indicate
	  their intention to do so. The system automatically detects when
	  a task or fiber that does not currently have floating point support
	  enabled uses a floating point instruction, and automatically executes
	  task_float_enable() or fiber_float_enable() on its behalf. The
	  task or fiber is enabled for using x87 FPU, MMX, or SSEx instructions
	  if SSE is configured, otherwise it is enabled for using x87 FPU or
	  MMX instructions only.

config	XIP
	default n

endmenu
