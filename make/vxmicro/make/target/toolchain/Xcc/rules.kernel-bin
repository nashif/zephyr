# rules.kernel-bin - build system

# Copyright (c) 2013-2014 Wind River Systems, Inc.

# The right to copy, distribute, modify or otherwise make use
# of this software may be licensed only pursuant to the terms
# of an applicable Wind River license agreement.

# kernel binary rules
# Note the use of echo not HOS_Echo since GNU ld needs forward slash paths

include ${vMAKE}/target/toolchain/Xcc/defs.kernel-bin

${vOUT_DIR}/%.${lnk}: ${iDEPEND_ON_MAKEFILES} | $$(dir $$@).dir
	-$q${HOS_Echo} '[${vTOOL}] Preparing   [$(notdir $@)]'
	$qecho -nostartfiles -nodefaultlibs -nostdlib -static > ${vOUT_DIR}/lflags
	$qecho $(foreach flag,${LFLAGS},-Wl,$(flag) ) >> ${vOUT_DIR}/lflags
	$qecho -Wl,-Map,${vOUT_DIR}/$*.map >> ${vOUT_DIR}/lflags
ifneq ($(strip ${iLTO}),)
	$qecho {$iLTO} >> ${vOUT_DIR}/lflags
endif
	$qecho -L . $(foreach script,$(filter %.cmd,$^),-T$(subst \,/,$(script))) >> ${vOUT_DIR}/lflags
	$qecho -u _OffsetAbsSyms >> ${vOUT_DIR}/lflags
	$qecho -u _ConfigAbsSyms >> ${vOUT_DIR}/lflags
ifneq ($(strip ${vARCH_UNDEF_SYMS}),)
	$qecho $(foreach sym,${vARCH_UNDEF_SYMS},-u ${sym} ) >> ${vOUT_DIR}/lflags
endif
	$qecho $(foreach path,${LIB_INCLUDE_DIR},-L $(subst \,/,${path}) ) >> ${vOUT_DIR}/lflags
	$qecho -Wl,--start-group $(foreach alib,${ALL_LIBS},-l${alib}) >> ${vOUT_DIR}/lflags
	$qecho ${vKLIB_DIR}/offsets.$o >> ${vOUT_DIR}/lflags
	$q$(HOS_Cat3Files) ${vOUT_DIR}/lflags ${iUSR} ${iMEM} $@ > ${HOS_DEVNULL_W}
	-$q${HOS_DeleteFiles} ${vOUT_DIR}/lflags

# rule to generate the final linker script (pre-processed)
${iFINAL_LINKER_CMD}: ${LINKER_CMD} ${iOFFSETS_HDR} | $$(dir $$@).dir
	$q${vPP} ${iLINKER_CMD_OPT} ${iLINKER_CMD_INC} $< -o $@

# rule to make elf files
%.${elf}: ${vOUT_DIR}/$$(notdir $$*).${lnk} ${iBUILDSPEC} ${iFINAL_LINKER_CMD} | $$(dir $$@).dir
	-@${HOS_Echo} '[${vTOOL}] Linking     [$(notdir $@)]'
	$q${vLD_K} -o $@ @$(filter %.${lnk},$^) $(filter %.$o,$^) -T ${iFINAL_LINKER_CMD}
	$(call idtInTxt)
ifeq ($(VXMICRO_HOST_OS),win32)
	$q$(HOS_CopyFile) $(HOS_Bin)/exeelf.exe $*.exe > ${HOS_DEVNULL_W}
endif

# bin-from-elf rule
%.${bin}: %.${elf} | $$(dir $$@).dir
	-@${HOS_Echo} '[${vTOOL}] Generating  [$(notdir $@)]'
	$q${vOD} -S $< >$*.lst
	$q${vOC} -S -O binary -R .note -R .comment -R COMMON -R .eh_frame ${EXTRA_OC_FLAGS} $< $@

# generate a stripped ELF file from an ELF image
%.${strip}: %.${elf} | $$(dir $$@).dir
	-@${HOS_Echo} '[${vTOOL}] Generating  [$(notdir $@)]'
	$q${vSTRIP} -s -o $@ $<
